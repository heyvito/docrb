module Docrb
  class Parser
    class Method
      type method_type = :instance | :class

      attr_accessor name: Symbol
      attr_accessor parameters: MethodParameters
      attr_accessor visibility: Container::visibility
      attr_accessor overriding: Integer?
      attr_accessor overridden_by: ::Array[Integer]
      attr_accessor type: method_type
      attr_accessor external_receiver: Reference?
      attr_accessor location: Location
      attr_accessor parent: Container?
      attr_accessor node: untyped

      @object_id: Integer

      def kind: () -> :method

      def initialize: (Parser parser, Container? parent, untyped node) -> void

      def id: () -> Integer

      def class?: () -> bool

      def instance?: () -> bool

      def module_function?: () -> bool

      def external?: () -> bool
    end
  end
end
